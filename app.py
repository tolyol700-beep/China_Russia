import os
import telebot
from telebot import types
import gspread
from google.oauth2.service_account import Credentials
import datetime
import logging
from flask import Flask, request
import json

# ========== –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ì–ò–†–û–í–ê–ù–ò–Ø ==========
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# ========== –°–û–ó–î–ê–ù–ò–ï FLASK –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø –î–õ–Ø RENDER ==========
app = Flask(__name__)

# ========== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==========
BOT_TOKEN = os.environ.get('BOT_TOKEN')
MANAGER_CHAT_IDS = [int(x.strip()) for x in os.environ.get('MANAGER_CHAT_IDS', '508551392',  '475363648').split(',')]
SPREADSHEET_ID = os.environ.get('SPREADSHEET_ID', '1AbgMLiQVYfLPcROOm1UMq0evFdYuRk760HhY0cI3LH8')

if not BOT_TOKEN:
    logger.error("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    raise ValueError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# ========== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê ==========
try:
    bot = telebot.TeleBot(BOT_TOKEN)
    bot_info = bot.get_me()
    logger.info(f"‚úÖ –ë–æ—Ç @{bot_info.username} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
    raise

# ========== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø GOOGLE SHEETS ==========
def init_google_sheets():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Service Account"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º credentials –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        credentials_json = os.environ.get('GOOGLE_CREDENTIALS_JSON')
        
        if not credentials_json:
            logger.warning("‚ùå GOOGLE_CREDENTIALS_JSON –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. Google Sheets –æ—Ç–∫–ª—é—á–µ–Ω.")
            return None
        
        SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
        
        # –°–æ–∑–¥–∞–µ–º credentials –∏–∑ JSON —Å—Ç—Ä–æ–∫–∏
        credentials_info = json.loads(credentials_json)
        credentials = Credentials.from_service_account_info(credentials_info, scopes=SCOPES)
        gc = gspread.authorize(credentials)
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ ID
        spreadsheet = gc.open_by_key(SPREADSHEET_ID)
        sheet = spreadsheet.sheet1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        if sheet.row_count == 0:
            headers = [
                "–°—Ç–∞—Ç—É—Å", "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è", "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "Username", 
                "–ò–º—è", "–¢–µ–ª–µ—Ñ–æ–Ω", "–ì–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è", 
                "–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞", "–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç", "–§–æ—Ç–æ", "–í–µ—Å (–∫–≥)", 
                "–û–±—ä–µ–º (–º¬≥)", "–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏", "–ë—é–¥–∂–µ—Ç", "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
            ]
            sheet.append_row(headers)
        
        logger.info("‚úÖ Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        return sheet
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
        return None

sheet = init_google_sheets()

# ========== –°–õ–û–í–ê–†–¨ –î–õ–Ø –í–†–ï–ú–ï–ù–ù–û–ì–û –•–†–ê–ù–ï–ù–ò–Ø –î–ê–ù–ù–´–• ==========
user_data = {}

# ========== –ö–õ–ê–í–ò–ê–¢–£–†–´ ==========
def phone_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = types.KeyboardButton(text="üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
    button_back = types.KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    button_manager = types.KeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
    button_main = types.KeyboardButton(text="üè† –í –Ω–∞—á–∞–ª–æ")
    keyboard.add(button_phone)
    keyboard.add(button_back, button_manager, button_main)
    return keyboard

def delivery_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    buttons = ["‚úàÔ∏è –ê–≤–∏–∞", "üö¢ –ú–æ—Ä–µ", "üöõ –ê–≤—Ç–æ", "üîÄ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ", "‚ùì –ù–µ –∑–Ω–∞—é"]
    keyboard.add(*buttons)
    button_back = types.KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    button_manager = types.KeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
    button_main = types.KeyboardButton(text="üè† –í –Ω–∞—á–∞–ª–æ")
    keyboard.add(button_back, button_manager, button_main)
    return keyboard

def skip_photo_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    keyboard.add("üì∑ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ")
    button_back = types.KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    button_manager = types.KeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
    button_main = types.KeyboardButton(text="üè† –í –Ω–∞—á–∞–ª–æ")
    keyboard.add(button_back, button_manager, button_main)
    return keyboard

def cancel_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_cancel = types.KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    button_manager = types.KeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
    button_main = types.KeyboardButton(text="üè† –í –Ω–∞—á–∞–ª–æ")
    keyboard.add(button_cancel, button_manager, button_main)
    return keyboard

def main_menu_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_new = types.KeyboardButton(text="üì¶ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞")
    button_manager = types.KeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
    keyboard.add(button_new, button_manager)
    return keyboard

def confirm_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    button_yes = types.KeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")
    button_no = types.KeyboardButton(text="‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å")
    button_manager = types.KeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
    button_main = types.KeyboardButton(text="üè† –í –Ω–∞—á–∞–ª–æ")
    keyboard.add(button_yes, button_no, button_manager, button_main)
    return keyboard

def correction_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    buttons = [
        "üë§ –ò–º—è", "üìû –¢–µ–ª–µ—Ñ–æ–Ω", "üèôÔ∏è –ì–æ—Ä–æ–¥", "üì¶ –ì—Ä—É–∑",
        "üîó –°—Å—ã–ª–∫–∞", "üñºÔ∏è –§–æ—Ç–æ", "‚öñÔ∏è –í–µ—Å", "üìè –û–±—ä–µ–º",
        "üöö –î–æ—Å—Ç–∞–≤–∫–∞", "üí∞ –ë—é–¥–∂–µ—Ç", "üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
    ]
    keyboard.add(*buttons)
    button_back = types.KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é")
    keyboard.add(button_back)
    return keyboard

def standard_keyboard():
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ù–∞–∑–∞–¥, –ú–µ–Ω–µ–¥–∂–µ—Ä, –í –Ω–∞—á–∞–ª–æ"""
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_back = types.KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    button_manager = types.KeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
    button_main = types.KeyboardButton(text="üè† –í –Ω–∞—á–∞–ª–æ")
    keyboard.add(button_back, button_manager, button_main)
    return keyboard

# ========== –ö–û–ú–ê–ù–î–´ ==========
@bot.message_handler(commands=['start'])
def start_command(message):
    chat_id = message.chat.id
    user_data[chat_id] = {'step': 'start'}
    
    text = """
üöö –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –†–æ—Å—Å–∏—é!

–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–±–µ—Ä–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ª–æ–≥–∏—Å—Ç–∏–∫–∏.

–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.

‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ‚¨áÔ∏è
    """
    bot.send_message(chat_id, text, reply_markup=main_menu_keyboard())

@bot.message_handler(commands=['admin'])
def admin_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    chat_id = message.chat.id
    admin_text = f"""
üõ†Ô∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

–í–∞—à ID: {chat_id}
–¢–µ–∫—É—â–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã: {MANAGER_CHAT_IDS}
"""
    bot.send_message(chat_id, admin_text)

@bot.message_handler(func=lambda message: message.text == "üì¶ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞")
def new_request(message):
    chat_id = message.chat.id
    user_data[chat_id] = {'step': 'name'}
    
    text = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"
    bot.send_message(chat_id, text, reply_markup=standard_keyboard())

@bot.message_handler(func=lambda message: message.text == "üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
def contact_manager(message):
    chat_id = message.chat.id
    user_data[chat_id] = {'step': 'manager_contact'}
    
    text = "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å. –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è:"
    bot.send_message(chat_id, text, reply_markup=cancel_keyboard())

@bot.message_handler(func=lambda message: message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
def cancel_command(message):
    chat_id = message.chat.id
    if chat_id in user_data:
        del user_data[chat_id]
    bot.send_message(chat_id, "–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_menu_keyboard())

@bot.message_handler(func=lambda message: message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
def back_command(message):
    chat_id = message.chat.id
    if chat_id not in user_data:
        start_command(message)
        return
    
    current_step = user_data[chat_id].get('step', 'start')
    
    # –õ–æ–≥–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
    steps_order = ['name', 'phone', 'destination', 'cargo', 'website', 'photo', 'weight', 'volume', 'delivery', 'budget', 'comment', 'confirm']
    
    if current_step in steps_order:
        current_index = steps_order.index(current_step)
        if current_index > 0:
            prev_step = steps_order[current_index - 1]
            user_data[chat_id]['step'] = prev_step
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É —à–∞–≥—É
            if prev_step == 'name':
                bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", reply_markup=standard_keyboard())
            elif prev_step == 'phone':
                bot.send_message(chat_id, "üìû –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=phone_keyboard())
            elif prev_step == 'destination':
                bot.send_message(chat_id, "üèôÔ∏è –ì–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–†–æ—Å—Å–∏—è):", reply_markup=standard_keyboard())
            elif prev_step == 'cargo':
                bot.send_message(chat_id, "üì¶ –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞:", reply_markup=standard_keyboard())
            elif prev_step == 'website':
                bot.send_message(chat_id, "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç (–∏–ª–∏ '–ù–µ—Ç'):", reply_markup=standard_keyboard())
            elif prev_step == 'photo':
                bot.send_message(chat_id, "üñºÔ∏è –§–æ—Ç–æ –≥—Ä—É–∑–∞ (–∏–ª–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ'):", reply_markup=skip_photo_keyboard())
            elif prev_step == 'weight':
                bot.send_message(chat_id, "‚öñÔ∏è –í–µ—Å –≥—Ä—É–∑–∞ (–∫–≥):", reply_markup=standard_keyboard())
            elif prev_step == 'volume':
                bot.send_message(chat_id, "üìè –û–±—ä–µ–º –≥—Ä—É–∑–∞ (–º¬≥):", reply_markup=standard_keyboard())
            elif prev_step == 'delivery':
                bot.send_message(chat_id, "üöö –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=delivery_keyboard())
            elif prev_step == 'budget':
                bot.send_message(chat_id, "üí∞ –ë—é–¥–∂–µ—Ç:", reply_markup=standard_keyboard())
            elif prev_step == 'comment':
                bot.send_message(chat_id, "üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–∏–ª–∏ '–ù–µ—Ç'):", reply_markup=standard_keyboard())
        else:
            start_command(message)
    else:
        start_command(message)

@bot.message_handler(func=lambda message: message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é")
def back_to_confirmation(message):
    chat_id = message.chat.id
    if chat_id not in user_data:
        start_command(message)
        return
    
    user_data[chat_id]['step'] = 'confirm'
    show_preview(chat_id)

@bot.message_handler(func=lambda message: message.text == "üè† –í –Ω–∞—á–∞–ª–æ")
def main_menu_command(message):
    start_command(message)

# ========== –õ–û–ì–ò–ö–ê –î–ò–ê–õ–û–ì–ê ==========
@bot.message_handler(content_types=['text', 'contact'])
def handle_all_messages(message):
    chat_id = message.chat.id
    
    if chat_id not in user_data:
        start_command(message)
        return
    
    current_step = user_data[chat_id].get('step', 'start')
    
    if current_step == 'start':
        if message.text == "üì¶ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞":
            new_request(message)
        elif message.text == "üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º":
            contact_manager(message)
        else:
            start_command(message)
    
    elif current_step == 'manager_contact':
        process_manager_contact(message)
    
    elif current_step == 'name':
        process_name(message)
    
    elif current_step == 'phone':
        process_phone(message)
    
    elif current_step == 'destination':
        process_destination(message)
    
    elif current_step == 'cargo':
        process_cargo(message)
    
    elif current_step == 'website':
        process_website(message)
    
    elif current_step == 'photo':
        process_photo(message)
    
    elif current_step == 'weight':
        process_weight(message)
    
    elif current_step == 'volume':
        process_volume(message)
    
    elif current_step == 'delivery':
        process_delivery(message)
    
    elif current_step == 'budget':
        process_budget(message)
    
    elif current_step == 'comment':
        process_comment(message)
    
    elif current_step == 'confirm':
        process_confirmation(message)
    
    elif current_step == 'correction':
        process_correction(message)

@bot.message_handler(content_types=['photo'])
def handle_photos(message):
    chat_id = message.chat.id
    
    if chat_id not in user_data:
        start_command(message)
        return
    
    current_step = user_data[chat_id].get('step', 'start')
    
    if current_step == 'photo':
        process_photo(message)

def process_manager_contact(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–º–æ—â–∏
    manager_request_text = f"""
üÜò –ü–û–ú–û–©–¨ –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.first_name} {f'(@{message.from_user.username})' if message.from_user.username else ''}
üÜî ID: {chat_id}
üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}

üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!
"""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
    send_to_manager_chats(manager_request_text, None, "–ó–∞–ø—Ä–æ—Å –ø–æ–º–æ—â–∏")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google Sheets
    if sheet:
        try:
            row = [
                "–ó–∞–ø—Ä–æ—Å –ø–æ–º–æ—â–∏",
                datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                str(chat_id),
                f"@{message.from_user.username}" if message.from_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω",
                f"{message.from_user.first_name} {message.from_user.last_name or ''}".strip(),
                "–ù–µ —É–∫–∞–∑–∞–Ω",
                "–ù–µ —É–∫–∞–∑–∞–Ω",
                message.text,
                "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
                "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ",
                "–ù–µ —É–∫–∞–∑–∞–Ω",
                "–ù–µ —É–∫–∞–∑–∞–Ω",
                "–ù–µ —É–∫–∞–∑–∞–Ω",
                "–ù–µ —É–∫–∞–∑–∞–Ω",
                "–ù–µ —É–∫–∞–∑–∞–Ω"
            ]
            sheet.append_row(row)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–º–æ—â–∏: {e}")
    
    bot.send_message(chat_id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º! –û–Ω–∏ —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.", 
                    reply_markup=main_menu_keyboard())

def process_name(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return
    
    user_data[chat_id]['name'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'phone'
    user_data[chat_id]['timestamp'] = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    user_data[chat_id]['user_id'] = chat_id
    user_data[chat_id]['username'] = f"@{message.from_user.username}" if message.from_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω"
    
    bot.send_message(chat_id, "üìû –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=phone_keyboard())

def process_phone(message):
    chat_id = message.chat.id
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    if message.contact:
        phone = message.contact.phone_number
        user_data[chat_id]['phone'] = phone
        
        # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
        if user_data[chat_id].get('correcting_mode'):
            user_data[chat_id]['step'] = 'confirm'
            show_preview(chat_id)
            return
        
        # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
        user_data[chat_id]['step'] = 'destination'
        bot.send_message(chat_id, "üèôÔ∏è –ì–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–†–æ—Å—Å–∏—è):", reply_markup=standard_keyboard())
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é)
    if message.text and message.text not in ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", "üè† –í –Ω–∞—á–∞–ª–æ"]:
        phone = message.text
        user_data[chat_id]['phone'] = phone
        
        # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
        if user_data[chat_id].get('correcting_mode'):
            user_data[chat_id]['step'] = 'confirm'
            show_preview(chat_id)
            return
        
        # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
        user_data[chat_id]['step'] = 'destination'
        bot.send_message(chat_id, "üèôÔ∏è –ì–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–†–æ—Å—Å–∏—è):", reply_markup=standard_keyboard())
        return
    
    # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        back_command(message)
    elif message.text == "üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º":
        contact_manager(message)
    elif message.text == "üè† –í –Ω–∞—á–∞–ª–æ":
        main_menu_command(message)

def process_destination(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return

    user_data[chat_id]['destination'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'cargo'
    bot.send_message(chat_id, "üì¶ –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞:", reply_markup=standard_keyboard())

def process_cargo(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return

    user_data[chat_id]['cargo'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'website'
    bot.send_message(chat_id, "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç (–∏–ª–∏ '–ù–µ—Ç'):", reply_markup=standard_keyboard())

def process_website(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return

    user_data[chat_id]['website'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'photo'
    bot.send_message(chat_id, "üñºÔ∏è –§–æ—Ç–æ –≥—Ä—É–∑–∞ (–∏–ª–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ'):", 
                    reply_markup=skip_photo_keyboard())

def process_photo(message):
    chat_id = message.chat.id
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
    if hasattr(message, 'text') and message.text:
        if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
            cancel_command(message)
            return
        elif message.text == "üì∑ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ":
            user_data[chat_id]['photo'] = "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
            
            # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
            if user_data[chat_id].get('correcting_mode'):
                user_data[chat_id]['step'] = 'confirm'
                show_preview(chat_id)
                return
            
            # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
            user_data[chat_id]['step'] = 'weight'
            bot.send_message(chat_id, "‚öñÔ∏è –í–µ—Å –≥—Ä—É–∑–∞ (–∫–≥):", reply_markup=standard_keyboard())
            return
        elif message.text in ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", "üè† –í –Ω–∞—á–∞–ª–æ"]:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
            if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
                back_command(message)
            elif message.text == "üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º":
                contact_manager(message)
            elif message.text == "üè† –í –Ω–∞—á–∞–ª–æ":
                main_menu_command(message)
            return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
    if message.photo:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
        user_data[chat_id]['photo'] = "–§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        user_data[chat_id]['photo_file_id'] = message.photo[-1].file_id
        
        # –ü–æ–ª—É—á–∞–µ–º URL —Ñ–æ—Ç–æ
        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ (–Ω–∞ Render.com —Ñ–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è)
        photo_filename = f"photo_{chat_id}_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}.jpg"
        with open(photo_filename, 'wb') as new_file:
            new_file.write(downloaded_file)
        
        user_data[chat_id]['photo_filename'] = photo_filename
        
        # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
        if user_data[chat_id].get('correcting_mode'):
            user_data[chat_id]['step'] = 'confirm'
            show_preview(chat_id)
            return
        
        # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
        user_data[chat_id]['step'] = 'weight'
        bot.send_message(chat_id, "‚úÖ –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!\n\n‚öñÔ∏è –í–µ—Å –≥—Ä—É–∑–∞ (–∫–≥):", reply_markup=standard_keyboard())
    else:
        user_data[chat_id]['photo'] = "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
        
        # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
        if user_data[chat_id].get('correcting_mode'):
            user_data[chat_id]['step'] = 'confirm'
            show_preview(chat_id)
            return
        
        # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
        user_data[chat_id]['step'] = 'weight'
        bot.send_message(chat_id, "‚öñÔ∏è –í–µ—Å –≥—Ä—É–∑–∞ (–∫–≥):", reply_markup=standard_keyboard())

def process_weight(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return

    user_data[chat_id]['weight'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'volume'
    bot.send_message(chat_id, "üìè –û–±—ä–µ–º –≥—Ä—É–∑–∞ (–º¬≥):", reply_markup=standard_keyboard())

def process_volume(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return

    user_data[chat_id]['volume'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'delivery'
    bot.send_message(chat_id, "üöö –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=delivery_keyboard())

def process_delivery(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return

    user_data[chat_id]['delivery'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'budget'
    bot.send_message(chat_id, "üí∞ –ë—é–¥–∂–µ—Ç:", reply_markup=standard_keyboard())

def process_budget(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return

    user_data[chat_id]['budget'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'comment'
    bot.send_message(chat_id, "üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–∏–ª–∏ '–ù–µ—Ç'):", reply_markup=standard_keyboard())

def process_comment(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return

    user_data[chat_id]['comment'] = message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    if user_data[chat_id].get('correcting_mode'):
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
    user_data[chat_id]['step'] = 'confirm'
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    show_preview(chat_id)

def show_preview(chat_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–∫–∏"""
    preview_text = f"""
üìã –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ô –ü–†–û–°–ú–û–¢–† –ó–ê–Ø–í–ö–ò

‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö:

üë§ –ò–º—è: {user_data[chat_id]['name']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data[chat_id]['phone']}
üèôÔ∏è –ì–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: {user_data[chat_id]['destination']}
üì¶ –ì—Ä—É–∑: {user_data[chat_id]['cargo']}
üîó –°—Å—ã–ª–∫–∞: {user_data[chat_id]['website']}
üñºÔ∏è –§–æ—Ç–æ: {user_data[chat_id]['photo']}
‚öñÔ∏è –í–µ—Å: {user_data[chat_id]['weight']} –∫–≥
üìè –û–±—ä–µ–º: {user_data[chat_id]['volume']} –º¬≥
üöö –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: {user_data[chat_id]['delivery']}
üí∞ –ë—é–¥–∂–µ—Ç: {user_data[chat_id]['budget']}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {user_data[chat_id]['comment']}

–í—Å—ë –≤–µ—Ä–Ω–æ?
"""
    
    bot.send_message(chat_id, preview_text, reply_markup=confirm_keyboard())

def process_confirmation(message):
    chat_id = message.chat.id
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        cancel_command(message)
        return
    
    if message.text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        save_data(user_data[chat_id])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
        send_to_managers(user_data[chat_id])
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        final_text = f"""
‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!

üìû –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à —Å–µ—Ä–≤–∏—Å! üöö
"""
        
        bot.send_message(chat_id, final_text, reply_markup=main_menu_keyboard())
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        if chat_id in user_data:
            del user_data[chat_id]
    
    elif message.text == "‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å":
        user_data[chat_id]['step'] = 'correction'
        show_correction_options(chat_id)

def show_correction_options(chat_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    correction_text = """
‚úèÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:

–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–ª–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å:
"""
    bot.send_message(chat_id, correction_text, reply_markup=correction_keyboard())

def process_correction(message):
    chat_id = message.chat.id
    
    if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é":
        user_data[chat_id]['step'] = 'confirm'
        show_preview(chat_id)
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    user_data[chat_id]['correcting_mode'] = True
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–µ –ø–æ–ª–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
    if message.text == "üë§ –ò–º—è":
        user_data[chat_id]['step'] = 'name'
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", reply_markup=standard_keyboard())
    
    elif message.text == "üìû –¢–µ–ª–µ—Ñ–æ–Ω":
        user_data[chat_id]['step'] = 'phone'
        bot.send_message(chat_id, "üìû –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=phone_keyboard())
    
    elif message.text == "üèôÔ∏è –ì–æ—Ä–æ–¥":
        user_data[chat_id]['step'] = 'destination'
        bot.send_message(chat_id, "üèôÔ∏è –ì–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–†–æ—Å—Å–∏—è):", reply_markup=standard_keyboard())
    
    elif message.text == "üì¶ –ì—Ä—É–∑":
        user_data[chat_id]['step'] = 'cargo'
        bot.send_message(chat_id, "üì¶ –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞:", reply_markup=standard_keyboard())
    
    elif message.text == "üîó –°—Å—ã–ª–∫–∞":
        user_data[chat_id]['step'] = 'website'
        bot.send_message(chat_id, "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç (–∏–ª–∏ '–ù–µ—Ç'):", reply_markup=standard_keyboard())
    
    elif message.text == "üñºÔ∏è –§–æ—Ç–æ":
        user_data[chat_id]['step'] = 'photo'
        bot.send_message(chat_id, "üñºÔ∏è –§–æ—Ç–æ –≥—Ä—É–∑–∞ (–∏–ª–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ'):", reply_markup=skip_photo_keyboard())
    
    elif message.text == "‚öñÔ∏è –í–µ—Å":
        user_data[chat_id]['step'] = 'weight'
        bot.send_message(chat_id, "‚öñÔ∏è –í–µ—Å –≥—Ä—É–∑–∞ (–∫–≥):", reply_markup=standard_keyboard())
    
    elif message.text == "üìè –û–±—ä–µ–º":
        user_data[chat_id]['step'] = 'volume'
        bot.send_message(chat_id, "üìè –û–±—ä–µ–º –≥—Ä—É–∑–∞ (–º¬≥):", reply_markup=standard_keyboard())
    
    elif message.text == "üöö –î–æ—Å—Ç–∞–≤–∫–∞":
        user_data[chat_id]['step'] = 'delivery'
        bot.send_message(chat_id, "üöö –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=delivery_keyboard())
    
    elif message.text == "üí∞ –ë—é–¥–∂–µ—Ç":
        user_data[chat_id]['step'] = 'budget'
        bot.send_message(chat_id, "üí∞ –ë—é–¥–∂–µ—Ç:", reply_markup=standard_keyboard())
    
    elif message.text == "üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π":
        user_data[chat_id]['step'] = 'comment'
        bot.send_message(chat_id, "üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–∏–ª–∏ '–ù–µ—Ç'):", reply_markup=standard_keyboard())

def send_to_managers(data):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º"""
    manager_text = f"""
üÜï –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –î–û–°–¢–ê–í–ö–£

üìÖ –î–∞—Ç–∞: {data['timestamp']}
üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω')}
üÜî ID: {data['user_id']}

üìã –î–ê–ù–ù–´–ï –ó–ê–Ø–í–ö–ò:
‚îú –ò–º—è: {data.get('name', '')}
‚îú –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone', '')}
‚îú –ì–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: {data.get('destination', '')}
‚îú –ì—Ä—É–∑: {data.get('cargo', '')}
‚îú –°—Å—ã–ª–∫–∞: {data.get('website', '')}
‚îú –§–æ—Ç–æ: {data.get('photo', '')}
‚îú –í–µ—Å: {data.get('weight', '')} –∫–≥
‚îú –û–±—ä–µ–º: {data.get('volume', '')} –º¬≥
‚îú –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: {data.get('delivery', '')}
‚îú –ë—é–¥–∂–µ—Ç: {data.get('budget', '')}
‚îî –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {data.get('comment', '')}

‚ö° –°—Ä–æ—á–Ω–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º!
"""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    photo_path = data.get('photo_filename')
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —á–∞—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    send_to_manager_chats(manager_text, photo_path, "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞")
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–≥ —Ñ–∞–π–ª
    save_manager_notification(manager_text, data.get('name', 'N/A'))

def send_to_manager_chats(text, photo_path=None, notification_type="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤"""
    if not MANAGER_CHAT_IDS:
        logger.warning(f"‚ö†Ô∏è –°–ø–∏—Å–æ–∫ ID –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø—É—Å—Ç. {notification_type} –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–≥ —Ñ–∞–π–ª –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        save_manager_notification(text, "–ú–µ–Ω–µ–¥–∂–µ—Ä")
        return
    
    success_count = 0
    for manager_id in MANAGER_CHAT_IDS:
        try:
            if photo_path and os.path.exists(photo_path):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º
                with open(photo_path, 'rb') as photo:
                    bot.send_photo(chat_id=manager_id, photo=photo, caption=text)
                logger.info(f"‚úÖ {notification_type} —Å —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É {manager_id}")
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                bot.send_message(chat_id=manager_id, text=text)
                logger.info(f"‚úÖ {notification_type} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É {manager_id}")
            success_count += 1
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É {manager_id}: {e}")
    
    if success_count == 0:
        logger.warning(f"‚ö†Ô∏è –ù–∏ –æ–¥–Ω–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {notification_type}")
        save_manager_notification(text, "–ú–µ–Ω–µ–¥–∂–µ—Ä")

def save_manager_notification(text, user_name):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª (–∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç)"""
    try:
        filename = f"manager_notifications.txt"
        with open(filename, 'a', encoding='utf-8') as f:
            f.write(f"\n{'='*60}\n")
            f.write(f"–î–∞—Ç–∞: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n")
            f.write(f"–¢–µ–∫—Å—Ç:\n{text}\n")
            f.write(f"{'='*60}\n")
        logger.info(f"üìù –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–∞–π–ª: {filename}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ñ–∞–π–ª: {e}")

def save_data(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets –∏–ª–∏ —Ñ–∞–π–ª"""
    # –ü—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Google Sheets
    if sheet:
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
            photo_info = data.get('photo', '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')
            if data.get('photo_filename'):
                photo_info = f"–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {data.get('photo_filename')}"
            
            row = [
                "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞",
                data.get('timestamp', ''),
                str(data.get('user_id', '')),
                data.get('username', ''),
                data.get('name', ''),
                data.get('phone', ''),
                data.get('destination', ''),
                data.get('cargo', ''),
                data.get('website', ''),
                photo_info,
                data.get('weight', ''),
                data.get('volume', ''),
                data.get('delivery', ''),
                data.get('budget', ''),
                data.get('comment', '')
            ]
            sheet.append_row(row)
            logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Google –¢–∞–±–ª–∏—Ü—É (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data.get('name', 'N/A')})")
            return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Google Sheets: {e}")
    
    # –ï—Å–ª–∏ Google Sheets –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    save_to_file(data)

def save_to_file(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª"""
    try:
        filename = f"–∑–∞—è–≤–∫–∏_{datetime.datetime.now().strftime('%Y%m')}.txt"
        with open(filename, 'a', encoding='utf-8') as f:
            f.write("=" * 50 + "\n")
            f.write(f"–î–∞—Ç–∞: {data['timestamp']}\n")
            f.write(f"ID: {data.get('user_id', '')}\n")
            f.write(f"Username: {data.get('username', '')}\n")
            f.write(f"–ò–º—è: {data.get('name', '')}\n")
            f.write(f"–¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone', '')}\n")
            f.write(f"–ì–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: {data.get('destination', '')}\n")
            f.write(f"–ì—Ä—É–∑: {data.get('cargo', '')}\n")
            f.write(f"–°—Å—ã–ª–∫–∞: {data.get('website', '')}\n")
            f.write(f"–§–æ—Ç–æ: {data.get('photo', '')}\n")
            if data.get('photo_filename'):
                f.write(f"–§–∞–π–ª —Ñ–æ—Ç–æ: {data.get('photo_filename')}\n")
            f.write(f"–í–µ—Å: {data.get('weight', '')} –∫–≥\n")
            f.write(f"–û–±—ä–µ–º: {data.get('volume', '')} –º¬≥\n")
            f.write(f"–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: {data.get('delivery', '')}\n")
            f.write(f"–ë—é–¥–∂–µ—Ç: {data.get('budget', '')}\n")
            f.write(f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {data.get('comment', '')}\n")
            f.write("=" * 50 + "\n\n")
        
        logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {filename}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª: {e}")

# ========== WEBHOOK –ú–ê–†–®–†–£–¢–´ –î–õ–Ø RENDER ==========
@app.route('/')
def home():
    return "üöö Telegram Bot –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –†–§ –∞–∫—Ç–∏–≤–µ–Ω!"

@app.route('/webhook', methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''
    else:
        return 'Invalid content type', 403

# ========== –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ==========
if __name__ == '__main__':
    # –ù–∞ Render –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    port = int(os.environ.get('PORT', 5000))
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Render
    webhook_url = os.environ.get('WEBHOOK_URL')
    if webhook_url:
        bot.remove_webhook()
        bot.set_webhook(url=f"{webhook_url}/webhook")
        logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}/webhook")
    else:
        logger.info("üîß –†–µ–∂–∏–º: Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è polling")
    
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –ø–æ—Ä—Ç—É {port}")

    app.run(host='0.0.0.0', port=port)
