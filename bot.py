import telebot
from telebot import types
import gspread
from google.oauth2.service_account import Credentials
import datetime
import os
import json
import requests
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload

# ========== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==========

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets –∏ Drive
SCOPES = ['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive']
SPREADSHEET_NAME = os.environ.get('GOOGLE_SHEET_NAME', '–ó–∞—è–≤–∫–∏ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –∏–∑ –ö–∏—Ç–∞—è')
GOOGLE_DRIVE_FOLDER_ID = os.environ.get('GOOGLE_DRIVE_FOLDER_ID')

# –ó–∞–≥—Ä—É–∑–∫–∞ credentials –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
def get_google_credentials():
    credentials_json = os.environ.get('GOOGLE_CREDENTIALS_JSON')
    if credentials_json:
        # –ß—Ç–µ–Ω–∏–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–ª—è production)
        credentials_dict = json.loads(credentials_json)
        return Credentials.from_service_account_info(credentials_dict, scopes=SCOPES)
    else:
        # –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - –∏–∑ —Ñ–∞–π–ª–∞
        try:
            return Credentials.from_service_account_file('credentials.json', scopes=SCOPES)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ credentials: {e}")
            return None

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ Google API
bot = telebot.TeleBot(BOT_TOKEN)
credentials = get_google_credentials()

if credentials:
    gc = gspread.authorize(credentials)
    try:
        spreadsheet = gc.open(SPREADSHEET_NAME)
        sheet = spreadsheet.sheet1
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google –¢–∞–±–ª–∏—Ü–µ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google –¢–∞–±–ª–∏—Ü–µ: {e}")
        sheet = None
else:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Google credentials")
    sheet = None

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# ========== –ö–õ–ê–°–° –î–õ–Ø –†–ê–ë–û–¢–´ –° –§–û–¢–û ==========
class PhotoManager:
    def __init__(self, bot_token, drive_credentials, drive_folder_id):
        self.bot_token = bot_token
        self.drive_credentials = drive_credentials
        self.drive_folder_id = drive_folder_id
        self.temp_dir = "temp_photos"
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if not os.path.exists(self.temp_dir):
            os.makedirs(self.temp_dir)
    
    def download_photo(self, file_id, chat_id):
        """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ —Å Telegram"""
        try:
            file_info = bot.get_file(file_id)
            file_url = f"https://api.telegram.org/file/bot{self.bot_token}/{file_info.file_path}"
            
            timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"photo_{chat_id}_{timestamp}.jpg"
            file_path = os.path.join(self.temp_dir, filename)
            
            response = requests.get(file_url)
            with open(file_path, 'wb') as f:
                f.write(response.content)
            
            return filename, file_path
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ: {e}")
            return None, None
    
    def upload_to_drive(self, file_path, filename):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ Google Drive"""
        try:
            drive_service = build('drive', 'v3', credentials=self.drive_credentials)
            
            file_metadata = {
                'name': filename,
                'parents': [self.drive_folder_id]
            }
            
            media = MediaFileUpload(file_path, resumable=True)
            file = drive_service.files().create(
                body=file_metadata,
                media_body=media,
                fields='id, webViewLink'
            ).execute()
            
            # –î–µ–ª–∞–µ–º —Ñ–∞–π–ª –ø—É–±–ª–∏—á–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º
            drive_service.permissions().create(
                fileId=file['id'],
                body={'type': 'anyone', 'role': 'reader'},
                fields='id'
            ).execute()
            
            return file.get('webViewLink')
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ Drive: {e}")
            return None
    
    def process_photo(self, file_id, chat_id):
        """–ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ"""
        if not self.drive_credentials or not self.drive_folder_id:
            return "–§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ (Drive –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
        
        # –°–∫–∞—á–∏–≤–∞–µ–º
        filename, file_path = self.download_photo(file_id, chat_id)
        if not filename:
            return "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ"
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ Drive
        drive_link = self.upload_to_drive(file_path, filename)
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        try:
            os.remove(file_path)
        except:
            pass
        
        return drive_link if drive_link else f"–§–æ—Ç–æ: {filename} (–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ Drive)"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ñ–æ—Ç–æ
if credentials and GOOGLE_DRIVE_FOLDER_ID:
    photo_manager = PhotoManager(
        bot_token=BOT_TOKEN,
        drive_credentials=credentials,
        drive_folder_id=GOOGLE_DRIVE_FOLDER_ID
    )
else:
    photo_manager = None
    print("‚ö†Ô∏è  –ú–µ–Ω–µ–¥–∂–µ—Ä —Ñ–æ—Ç–æ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç credentials –∏–ª–∏ folder_id")

# ========== –ö–õ–ê–í–ò–ê–¢–£–†–´ ==========
def phone_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    keyboard.add(button_phone)
    return keyboard

def delivery_method_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"""
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    buttons = [
        "–ê–≤–∏–∞",
        "–ú–æ—Ä–µ (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä)",
        "–ê–≤—Ç–æ", 
        "–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ",
        "–ù–µ –∑–Ω–∞—é"
    ]
    keyboard.add(*buttons)
    return keyboard

def photo_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ"""
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    keyboard.add("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ")
    return keyboard

def cancel_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    keyboard.add("–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É")
    return keyboard

# ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î ==========
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    user_data[chat_id] = {}  # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    welcome_text = """
    üöö –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≥—Ä—É–∑–æ–≤ –∏–∑ –ö–∏—Ç–∞—è –≤ –†–§!

    –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ —Å—Ä–æ–∫–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª–µ–µ 3 –º–∏–Ω—É—Ç.

    –î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ *–ò–º—è*:
    """
    bot.send_message(chat_id, welcome_text, parse_mode='Markdown', reply_markup=cancel_keyboard())
    bot.register_next_step_handler(message, process_name_step)

@bot.message_handler(func=lambda message: message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É")
def cancel_request(message):
    chat_id = message.chat.id
    if chat_id in user_data:
        del user_data[chat_id]
    bot.send_message(chat_id, "–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start.", reply_markup=types.ReplyKeyboardRemove())

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
    ü§ñ *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*

    –ö–æ–º–∞–Ω–¥—ã:
    /start - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É
    /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
    /status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞

    –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É.
    """
    bot.send_message(message.chat.id, help_text, parse_mode='Markdown')

@bot.message_handler(commands=['status'])
def send_status(message):
    status_text = """
    ‚úÖ *–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞*

    –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ.
    Google –¢–∞–±–ª–∏—Ü–∞: {sheet_status}
    Google Drive: {drive_status}
    """.format(
        sheet_status="‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞" if sheet else "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
        drive_status="‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω" if photo_manager and GOOGLE_DRIVE_FOLDER_ID else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    )
    bot.send_message(message.chat.id, status_text, parse_mode='Markdown')

# ========== –õ–û–ì–ò–ö–ê –î–ò–ê–õ–û–ì–ê ==========
def process_name_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['name'] = message.text
    bot.send_message(chat_id, "üìû –¢–µ–ø–µ—Ä—å –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:", reply_markup=phone_keyboard())
    bot.register_next_step_handler(message, process_phone_step)

def process_phone_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    if message.contact is not None:
        phone = message.contact.phone_number
    else:
        phone = message.text  # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–¥–µ—Ç –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é

    user_data[chat_id]['phone'] = phone

    bot.send_message(chat_id, "üèôÔ∏è –ò–∑ –∫–∞–∫–æ–≥–æ *–≥–æ—Ä–æ–¥–∞ –≤ –ö–∏—Ç–∞–µ* –Ω—É–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –≥—Ä—É–∑?", parse_mode='Markdown', reply_markup=cancel_keyboard())
    bot.register_next_step_handler(message, process_origin_city_step)

def process_origin_city_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['origin_city'] = message.text
    bot.send_message(chat_id, "üèôÔ∏è –í –∫–∞–∫–æ–π *–≥–æ—Ä–æ–¥ –≤ –†–æ—Å—Å–∏–∏* –Ω—É–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≥—Ä—É–∑?", parse_mode='Markdown', reply_markup=cancel_keyboard())
    bot.register_next_step_handler(message, process_destination_city_step)

def process_destination_city_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['destination_city'] = message.text
    bot.send_message(chat_id, "üì¶ –û–ø–∏—à–∏—Ç–µ –≥—Ä—É–∑ (–Ω–∞–ø—Ä–∏–º–µ—Ä: *–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –æ–¥–µ–∂–¥–∞, –∑–∞–ø—á–∞—Å—Ç–∏*):", parse_mode='Markdown', reply_markup=cancel_keyboard())
    bot.register_next_step_handler(message, process_cargo_description_step)

def process_cargo_description_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['cargo_description'] = message.text
    bot.send_message(chat_id, "üîó –ï—Å—Ç—å –ª–∏ *—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç* —Å —Ç–æ–≤–∞—Ä–æ–º? (–ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–ù–µ—Ç'):", parse_mode='Markdown', reply_markup=cancel_keyboard())
    bot.register_next_step_handler(message, process_website_link_step)

def process_website_link_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['website_link'] = message.text
    bot.send_message(chat_id, "üñºÔ∏è –ü—Ä–∏—à–ª–∏—Ç–µ *—Ñ–æ—Ç–æ –≥—Ä—É–∑–∞* (–µ—Å–ª–∏ –µ—Å—Ç—å). –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ':", parse_mode='Markdown', reply_markup=photo_keyboard())
    bot.register_next_step_handler(message, process_photo_step)

def process_photo_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ":
        user_data[chat_id]['photo'] = "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
        bot.send_message(chat_id, "‚öñÔ∏è –£–∫–∞–∂–∏—Ç–µ *–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π –≤–µ—Å –≥—Ä—É–∑–∞ (–≤ –∫–≥)*:", parse_mode='Markdown', reply_markup=cancel_keyboard())
        bot.register_next_step_handler(message, process_weight_step)
    elif message.photo:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ
        photo_id = message.photo[-1].file_id
        
        if photo_manager:
            photo_result = photo_manager.process_photo(photo_id, chat_id)
            user_data[chat_id]['photo'] = photo_result
        else:
            user_data[chat_id]['photo'] = "–§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ (Drive –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
        
        bot.send_message(chat_id, "‚úÖ –§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ *–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π –≤–µ—Å –≥—Ä—É–∑–∞ (–≤ –∫–≥)*:", parse_mode='Markdown', reply_markup=cancel_keyboard())
        bot.register_next_step_handler(message, process_weight_step)
    else:
        user_data[chat_id]['photo'] = "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
        bot.send_message(chat_id, "‚öñÔ∏è –£–∫–∞–∂–∏—Ç–µ *–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π –≤–µ—Å –≥—Ä—É–∑–∞ (–≤ –∫–≥)*:", parse_mode='Markdown', reply_markup=cancel_keyboard())
        bot.register_next_step_handler(message, process_weight_step)

def process_weight_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['weight'] = message.text
    bot.send_message(chat_id, "üìè –£–∫–∞–∂–∏—Ç–µ *–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º –≥—Ä—É–∑–∞ (–≤ –º¬≥)*:", parse_mode='Markdown', reply_markup=cancel_keyboard())
    bot.register_next_step_handler(message, process_volume_step)

def process_volume_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['volume'] = message.text
    bot.send_message(chat_id, "üöö –í—ã–±–µ—Ä–∏—Ç–µ *—Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏*:", parse_mode='Markdown', reply_markup=delivery_method_keyboard())
    bot.register_next_step_handler(message, process_delivery_method_step)

def process_delivery_method_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['delivery_method'] = message.text
    bot.send_message(chat_id, "üí∞ –£–∫–∞–∂–∏—Ç–µ –≤–∞—à *–ø—Ä–∏–º–µ—Ä–Ω—ã–π –±—é–¥–∂–µ—Ç* –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É:", parse_mode='Markdown', reply_markup=cancel_keyboard())
    bot.register_next_step_handler(message, process_budget_step)

def process_budget_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['budget'] = message.text
    bot.send_message(chat_id, "üí¨ *–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥!* –ï—Å—Ç—å –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ *–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏*?\n(–ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–ù–µ—Ç'):", parse_mode='Markdown', reply_markup=cancel_keyboard())
    bot.register_next_step_handler(message, process_comment_step)

def process_comment_step(message):
    chat_id = message.chat.id
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É":
        cancel_request(message)
        return

    user_data[chat_id]['comment'] = message.text

    # ========== –°–û–•–†–ê–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• ==========
    save_data_to_sheet(chat_id, message.from_user.username, user_data[chat_id])

    # ========== –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï ==========
    final_message = f"""
‚úÖ *–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!*

*–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:*
*–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤:* –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É
*–ò–º—è:* {user_data[chat_id]['name']}
*–¢–µ–ª–µ—Ñ–æ–Ω:* {user_data[chat_id]['phone']}
*–ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å (–ö–ù–†):* {user_data[chat_id]['origin_city']}
*–ì–æ—Ä–æ–¥ –ø–æ–ª—É—á–∞—Ç–µ–ª—å (–†–§):* {user_data[chat_id]['destination_city']}
*–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞:* {user_data[chat_id]['cargo_description']}
*–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç:* {user_data[chat_id]['website_link']}
*–§–æ—Ç–æ:* {user_data[chat_id]['photo']}
*–í–µ—Å:* {user_data[chat_id]['weight']} –∫–≥
*–û–±—ä–µ–º:* {user_data[chat_id]['volume']} –º¬≥
*–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:* {user_data[chat_id]['delivery_method']}
*–ë—é–¥–∂–µ—Ç:* {user_data[chat_id]['budget']}
*–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:* {user_data[chat_id]['comment']}

–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∏ —Ä–∞—Å—á–µ—Ç–∞ —Ç–æ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏.

–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start
"""
    
    bot.send_message(chat_id, final_message, parse_mode='Markdown', reply_markup=types.ReplyKeyboardRemove())

    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if chat_id in user_data:
        del user_data[chat_id]

def save_data_to_sheet(chat_id, username, data):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Google –¢–∞–±–ª–∏—Ü—É"""
    if not sheet:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞")
        return
        
    try:
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        row = [
            "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É",  # –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤
            timestamp,                   # –î–∞—Ç–∞ –∑–∞—è–≤–∫–∏ / Timestamp
            str(chat_id),                # User ID
            f"@{username}" if username else "–ù–µ —É–∫–∞–∑–∞–Ω",  # Username
            data.get('name', ''),        # –ò–º—è
            data.get('phone', ''),       # –¢–µ–ª–µ—Ñ–æ–Ω
            data.get('origin_city', ''), # –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å (–ö–ù–†)
            data.get('destination_city', ''), # –ì–æ—Ä–æ–¥ –ø–æ–ª—É—á–∞—Ç–µ–ª—å (–†–§)
            data.get('cargo_description', ''), # –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞
            data.get('website_link', ''), # –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç
            data.get('photo', ''),       # –§–æ—Ç–æ
            data.get('weight', ''),      # –í–µ—Å
            data.get('volume', ''),      # –û–±—ä–µ–º
            data.get('delivery_method', ''), # –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏
            data.get('budget', ''),      # –ë—é–¥–∂–µ—Ç
            data.get('comment', '')      # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        ]
        sheet.append_row(row)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –¥–ª—è chat_id {chat_id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤—Ö–æ–¥—è—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–π flow
@bot.message_handler(func=lambda message: True)
def handle_other_messages(message):
    chat_id = message.chat.id
    if chat_id not in user_data:
        bot.send_message(chat_id, "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
    else:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –∑–∞—è–≤–∫—É –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π.")

# ========== –ó–ê–ü–£–°–ö –ë–û–¢–ê ==========
if __name__ == '__main__':
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print(f"‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞: {'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if BOT_TOKEN else '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
    print(f"‚úÖ Google –¢–∞–±–ª–∏—Ü–∞: {'–î–æ—Å—Ç—É–ø–Ω–∞' if sheet else '–ù–µ –¥–æ—Å—Ç—É–ø–Ω–∞'}")
    print(f"‚úÖ Google Drive: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if photo_manager and GOOGLE_DRIVE_FOLDER_ID else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    
    try:
        print("üîÑ –ó–∞–ø—É—Å–∫ long-polling...")
        bot.infinity_polling(timeout=60, long_polling_timeout=60)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
